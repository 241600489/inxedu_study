<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ExamAppointmentLogMapper" >
  <resultMap id="BaseResultMap" type="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="event_date" property="eventDate" jdbcType="VARCHAR" />
    <result column="event_man" property="eventMan" jdbcType="VARCHAR" />
    <result column="events" property="events" jdbcType="VARCHAR" />
    <result column="object" property="object" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, event_date, event_man, events, object
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam_appointment_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam_appointment_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam_appointment_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLogExample" >
    delete from exam_appointment_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLog" >
    insert into exam_appointment_log (id, event_date, event_man, 
      events, object)
    values (#{id,jdbcType=INTEGER}, #{eventDate,jdbcType=VARCHAR}, #{eventMan,jdbcType=VARCHAR}, 
      #{events,jdbcType=VARCHAR}, #{object,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLog" >
    insert into exam_appointment_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="eventDate != null" >
        event_date,
      </if>
      <if test="eventMan != null" >
        event_man,
      </if>
      <if test="events != null" >
        events,
      </if>
      <if test="object != null" >
        object,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eventDate != null" >
        #{eventDate,jdbcType=VARCHAR},
      </if>
      <if test="eventMan != null" >
        #{eventMan,jdbcType=VARCHAR},
      </if>
      <if test="events != null" >
        #{events,jdbcType=VARCHAR},
      </if>
      <if test="object != null" >
        #{object,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLogExample" resultType="java.lang.Integer" >
    select count(*) from exam_appointment_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam_appointment_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eventDate != null" >
        event_date = #{record.eventDate,jdbcType=VARCHAR},
      </if>
      <if test="record.eventMan != null" >
        event_man = #{record.eventMan,jdbcType=VARCHAR},
      </if>
      <if test="record.events != null" >
        events = #{record.events,jdbcType=VARCHAR},
      </if>
      <if test="record.object != null" >
        object = #{record.object,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam_appointment_log
    set id = #{record.id,jdbcType=INTEGER},
      event_date = #{record.eventDate,jdbcType=VARCHAR},
      event_man = #{record.eventMan,jdbcType=VARCHAR},
      events = #{record.events,jdbcType=VARCHAR},
      object = #{record.object,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLog" >
    update exam_appointment_log
    <set >
      <if test="eventDate != null" >
        event_date = #{eventDate,jdbcType=VARCHAR},
      </if>
      <if test="eventMan != null" >
        event_man = #{eventMan,jdbcType=VARCHAR},
      </if>
      <if test="events != null" >
        events = #{events,jdbcType=VARCHAR},
      </if>
      <if test="object != null" >
        object = #{object,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.inxedu.os.nstar.appointment.entity.examAppointmentLog.ExamAppointmentLog" >
    update exam_appointment_log
    set event_date = #{eventDate,jdbcType=VARCHAR},
      event_man = #{eventMan,jdbcType=VARCHAR},
      events = #{events,jdbcType=VARCHAR},
      object = #{object,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertExamLog" parameterType="ExamAppointmentLog">
    INSERT INTO `demo_inxedu_v2_0_open`.`exam_appointment_log` (`id`, `event_date`, `event_man`, `events`, `object`)
    VALUES (null, #{eventDate}, #{eventMan}, #{events}, #{object})
  </insert>
  <select id="queryExamLogByObject" parameterType="String" resultMap="BaseResultMap">
  SELECT *
  FROM  exam_appointment_log
    <where>
      <if test="e.object!=null">
        AND object LIKE  '%${e.object}%'
      </if>
    </where>
    <include refid="publicMapper.pageEnd"/>
</select>
  <select id="queryExamLogByObjectCount" parameterType="map" resultType="int">
    SELECT Count(*)
    FROM  exam_appointment_log
    <where>
      <if test="e.object!=null">
        AND object LIKE  '%${e.object}%'
      </if>
    </where>
  </select>
  <select id="getExamAppointmentLogList" resultMap="BaseResultMap">
  SELECT *
  FROM   exam_appointment_log
    <include refid="publicMapper.pageEnd"/>
  </select>
  <select id="getExamAppointmentLogListCount" resultType="int">
    SELECT COUNT(*)
    FROM   exam_appointment_log
  </select>
  <select id="queryAllExamAppointmentLog" resultMap="BaseResultMap">
    select * from
    exam_appointment_log
  </select>
</mapper>